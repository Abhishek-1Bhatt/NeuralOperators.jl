var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = NeuralOperators","category":"page"},{"location":"#NeuralOperators","page":"Home","title":"NeuralOperators","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for NeuralOperators.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [NeuralOperators]","category":"page"},{"location":"#NeuralOperators.SpectralConv-Union{Tuple{N}, Tuple{S}, Tuple{Pair{S, S}, Tuple{Vararg{S, N}}}, Tuple{Pair{S, S}, Tuple{Vararg{S, N}}, Any}} where {S<:Integer, N}","page":"Home","title":"NeuralOperators.SpectralConv","text":"SpectralConv(\n    ch, modes, σ=identity;\n    init=c_glorot_uniform, permuted=false, T=ComplexF32\n)\n\nSpectralConv\n\nv(x): input\nF, F^-1: Fourier transform, inverse fourier transform\nL: linear transform on the lower Fouier modes.\n\nv(x) -> F -> L -> F^-1\n\nExample\n\njulia> SpectralConv(2=>5, (16, ))\nSpectralConv(2 => 5, (16,), σ=identity)\n\njulia> using Flux\n\njulia> SpectralConv(2=>5, (16, ), relu)\nSpectralConv(2 => 5, (16,), σ=relu)\n\njulia> SpectralConv(2=>5, (16, ), relu, permuted=true)\nSpectralConvPerm(2 => 5, (16,), σ=relu)\n\n\n\n\n\n","category":"method"},{"location":"#NeuralOperators.FourierOperator-Union{Tuple{N}, Tuple{S}, Tuple{Pair{S, S}, Tuple{Vararg{S, N}}}, Tuple{Pair{S, S}, Tuple{Vararg{S, N}}, Any}} where {S<:Integer, N}","page":"Home","title":"NeuralOperators.FourierOperator","text":"FourierOperator(ch, modes, σ=identity; permuted=false)\n\nFourierOperator\n\nv(x): input\nF, F^-1: Fourier transform, inverse fourier transform\nL: linear transform on the lower Fouier modes\nD: local linear transform\n\n        ┌ F -> L -> F¯¹ ┐\nv(x) -> ┤               ├ -> + -> σ\n        └      D        ┘\n\nExample\n\njulia> FourierOperator(2=>5, (16, ))\nChain(\n  Parallel(\n    +,\n    Dense(2, 5),                        # 15 parameters\n    SpectralConv(2 => 5, (16,), σ=identity),  # 160 parameters\n  ),\n  NeuralOperators.var\"#activation_func#14\"{typeof(identity)}(identity),\n)                   # Total: 3 arrays, 175 parameters, 1.668 KiB.\n\njulia> using Flux\n\njulia> FourierOperator(2=>5, (16, ), relu)\nChain(\n  Parallel(\n    +,\n    Dense(2, 5),                        # 15 parameters\n    SpectralConv(2 => 5, (16,), σ=identity),  # 160 parameters\n  ),\n  NeuralOperators.var\"#activation_func#14\"{typeof(relu)}(NNlib.relu),\n)                   # Total: 3 arrays, 175 parameters, 1.668 KiB.\n\njulia> FourierOperator(2=>5, (16, ), relu, permuted=true)\nChain(\n  Parallel(\n    +,\n    Conv((1,), 2 => 5),                 # 15 parameters\n    SpectralConvPerm(2 => 5, (16,), σ=identity),  # 160 parameters\n  ),\n  NeuralOperators.var\"#activation_func#14\"{typeof(relu)}(NNlib.relu),\n)                   # Total: 3 arrays, 175 parameters, 1.871 KiB.\n\n\n\n\n\n","category":"method"}]
}
